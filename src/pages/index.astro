---
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Astro</h1>
    <canvas class="zdog-canvas" width="400" height="300"></canvas>
    <button class="flip-whiteboard">Flip</button>

    <style>
      .zdog-canvas {
        /* background: #292b2b; */
        background: #e9eff1;
      }
    </style>

    <script>
      import Zdog from "zdog";
      import { smilieFace } from "./_faces";
      import { Spring } from "simple-spring";

      const bodyColor = "#292b2b";

      const flipButton = document.querySelector(".flip-whiteboard")!;

      const illo = new Zdog.Illustration({
        element: ".zdog-canvas",
        dragRotate: true,
        rotate: { x: -Zdog.TAU / 16, y: Zdog.TAU / 10 },
      });

      const groupWhiteboard = new Zdog.Group({
        addTo: illo,
      });

      const whiteboardTheWidth = 90;

      const fill = new Zdog.Rect({
        width: whiteboardTheWidth,
        height: 120,
        stroke: 2,
        color: "#fff",
        fill: true,
      });

      const markerThickness = 6;

      function oldFrownieFace() {
        const face = new Zdog.Group({
          translate: { x: 0, y: 0, z: 0 },
        });

        const shared: Zdog.ShapeOptions = {
          addTo: face,
          stroke: markerThickness,
          color: "blue",
          backface: false,
        };

        const leftEye = new Zdog.Shape({
          ...shared,
          path: [
            { x: -20, y: -20 },
            { x: -20, y: 0 },
          ],
        });

        const rightEye = new Zdog.Shape({
          ...shared,
          path: [
            { x: 20, y: -20 },
            { x: 20, y: 0 },
          ],
        });

        const mouth = new Zdog.Ellipse({
          ...shared,
          width: 20,
          height: 20,
          quarters: 2,
          translate: { x: 0, y: 12 },
          rotate: { z: Zdog.TAU / 4 },
        });

        return face;
      }

      const border = new Zdog.Rect({
        width: whiteboardTheWidth,
        height: 120,
        stroke: 8,
        color: bodyColor,
      });

      const groupLeftStand = new Zdog.Group({
        translate: { x: -(fill.width / 2) - 12, y: 40 },
      });

      const stand = new Zdog.Rect({
        width: 10,
        height: 80,
        stroke: 10,
        color: bodyColor,
        fill: true,
        rotate: { y: Zdog.TAU / 4 },
      });

      const foot = new Zdog.Rect({
        width: 10,
        height: 40,
        stroke: 10,
        color: bodyColor,
        fill: true,
        rotate: { x: Zdog.TAU / 4 },
        translate: { y: 40 },
      });

      const groupRightStand = new Zdog.Group({
        translate: { x: fill.width / 2 + 12, y: 40 },
      });

      groupLeftStand.addChild(stand);
      groupLeftStand.addChild(foot);
      groupRightStand.addChild(stand.copy());
      groupRightStand.addChild(foot.copy());
      illo.addChild(groupRightStand);
      illo.addChild(groupLeftStand);
      groupWhiteboard.addChild(fill);
      groupWhiteboard.addChild(border);

      // new Zdog.Ellipse({
      //   addTo: groupWhiteboard,
      //   diameter: 20,
      //   quarters: 2,
      //   translate: { x: 0, y: 0, z: 0 },
      //   stroke: 2,
      //   color: "blue",
      //   // rotate: { z: Zdog.TAU * (1 / 8) },
      // });

      // new Zdog.Ellipse({
      //   addTo: groupWhiteboard,
      //   diameter: 20,
      //   quarters: 2,
      //   translate: { x: 0, y: 0, z: 0 },
      //   stroke: 3,
      //   color: "white",
      //   rotate: { z: Zdog.TAU * (1 / 4) },
      // });

      let currFace = smilieFace(illo);
      groupWhiteboard.addChild(currFace.face);
      currFace.animate();

      illo.updateRenderGraph();

      flipButton.addEventListener("click", function flipWhiteboard() {
        const springValue = new Spring({
          target: Zdog.TAU / 2,
          tension: 180,
          friction: 14,
          onFrame(value) {
            groupWhiteboard.rotate.x = value;
            illo.updateRenderGraph();
          },
          async onComplete() {
            groupWhiteboard.rotate.x = 0;
            groupWhiteboard.removeChild(currFace.face);

            currFace = smilieFace(illo);
            groupWhiteboard.addChild(currFace.face);
            groupWhiteboard.updateGraph();
            await currFace.animate();
          },
        });

        springValue.start();
      });
    </script>
  </body>
</html>
